name: 'Python Poetry Setup'
description: 'Setup python poetry, ready to be used (with cache).'
branding:
  icon: 'package'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - run: echo setting up pypoetry.
      shell: bash
      
    - name: Get full Python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      shell: bash

    - run: pip install poetry
      shell: bash

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true
      shell: bash

    - name: Set up cache
      uses: actions/cache@v4
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv
      shell: bash
